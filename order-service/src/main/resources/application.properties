##########################################
# Application properties
##########################################
logging.level.org.springframework.web=debug
logging.level.org.hibernate=debug
spring.application.name=order-service
server.port=8081
order.successful.message=Order Placed Successfully
order.error.message=Product is not in stock, please try again later

##########################################
# JPA AND MYSQL PROPERTIES
##########################################
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/order_service
spring.datasource.username=postgres
spring.datasource.password=Me8550n.&
spring.datasource.driver-class-name=org.postgresql.Driver
##########################################
# EUREKA CLIENT PROPERTIES
##########################################
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0

# Kafka Properties
spring.kafka.bootstrap-servers=yami-sukehiro:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.header=false
spring.kafka.producer.properties.spring.json.type.mapping=event:com.appsdeveloper.estore.orderservice.event.OrderPlacedEvent